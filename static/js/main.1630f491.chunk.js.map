{"version":3,"sources":["img/chai-logo.png","img/banner.png","header/header.js","chai_types/chai_types.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","react_default","a","createElement","className","href","src","banner","alt","Component","ChaiTypes","state","chai_types","name","img","logo","desc","ChaiList","_this","map","Ctype","aria-label","this","App","header_header","chai_types_chai_types","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,8DCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,2QCoCzBC,mLA7Bb,OACCC,EAAAC,EAAAC,cAAA,cACCF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACdH,EAAAC,EAAAC,cAAA,0BAKDF,EAAAC,EAAAC,cAAA,UACCF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,UACbH,EAAAC,EAAAC,cAAA,KAAGE,KAAK,SAAR,SAEDJ,EAAAC,EAAAC,cAAA,UACCF,EAAAC,EAAAC,cAAA,KAAGE,KAAK,UAAR,UAEDJ,EAAAC,EAAAC,cAAA,UACCF,EAAAC,EAAAC,cAAA,KAAGE,KAAK,YAAR,iBAIHJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACdH,EAAAC,EAAAC,cAAA,OAAKG,IAAKC,IAAQC,IAAI,oBAxBNC,qCC0DNC,6MA1DdC,MAAQ,CACPC,WAAY,CACX,CACCC,KAAM,6BACNC,IAAKC,IACLC,KAAM,4NAEP,CACCH,KAAM,aACNC,IAAKC,IACLC,KAAM,4NAEP,CACCH,KAAM,aACNC,IAAKC,IACLC,KAAM,4NAEP,CACCH,KAAM,aACNC,IAAKC,IACLC,KAAM,4NAEP,CACCH,KAAM,cACNC,IAAKC,IACLC,KAAM,gOAKTC,SAAW,WACV,OAAOC,EAAKP,MAAMC,WAAWO,IAAI,SAAAC,GAChC,OACCnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACdH,EAAAC,EAAAC,cAAA,UAAKiB,EAAMP,OAEZZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACdH,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,OAAKG,IAAKc,EAAMN,IAAKN,IAAI,UAEzBY,EAAMJ,kFAQX,OACCf,EAAAC,EAAAC,cAAA,WAASkB,aAAW,cACnBpB,EAAAC,EAAAC,cAAA,uDACAF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+CAA+CkB,KAAKL,oBArD/CR,aCWTc,MAXf,WACC,OACCtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACdH,EAAAC,EAAAC,cAACqB,EAAD,MACAvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACdH,EAAAC,EAAAC,cAACsB,EAAD,SCGgBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO/B,EAAAC,EAAAC,cAAC8B,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.1630f491.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/chai-logo.a4cf495e.png\";","module.exports = __webpack_public_path__ + \"static/media/banner.c2e1ea45.png\";","import React, { Component } from \"react\";\r\nimport \"./header.css\";\r\n// import logo from \"../img/chai-logo.png\";\r\nimport banner from \"../img/banner.png\";\r\n\r\nclass Header extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<header>\r\n\t\t\t\t<nav className=\"navigation-bar\">\r\n\t\t\t\t\t<div className=\"logo\">\r\n\t\t\t\t\t\t<h1>\r\n\t\t\t\t\t\t\t{/* <img src={logo} alt=\"logo\" /> Chai Tarang */}\r\n\t\t\t\t\t\t\tChai Tarang\r\n\t\t\t\t\t\t</h1>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li className=\"active\">\r\n\t\t\t\t\t\t\t<a href=\"/home\">Home</a>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<a href=\"/about\">About</a>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li>\r\n\t\t\t\t\t\t\t<a href=\"/contact\">Contact US</a>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</nav>\r\n\t\t\t\t<div className=\"banner\">\r\n\t\t\t\t\t<img src={banner} alt=\"banner\" />\r\n\t\t\t\t</div>\r\n\t\t\t</header>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport \"./chai_types.css\";\r\nimport logo from \"../img/chai-logo.png\";\r\n\r\nclass ChaiTypes extends Component {\r\n\tstate = {\r\n\t\tchai_types: [\r\n\t\t\t{\r\n\t\t\t\tname: \"Chai Tarang - Special Chai\",\r\n\t\t\t\timg: logo,\r\n\t\t\t\tdesc: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Laboriosam ex minima in illum blanditiis eligendi, recusandae autem delectus quo dolore saepe amet, mollitia dolor quidem libero? Repellendus, odit autem. Sed?\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: \"Black Chai\",\r\n\t\t\t\timg: logo,\r\n\t\t\t\tdesc: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Laboriosam ex minima in illum blanditiis eligendi, recusandae autem delectus quo dolore saepe amet, mollitia dolor quidem libero? Repellendus, odit autem. Sed?\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: \"Lemon Chai\",\r\n\t\t\t\timg: logo,\r\n\t\t\t\tdesc: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Laboriosam ex minima in illum blanditiis eligendi, recusandae autem delectus quo dolore saepe amet, mollitia dolor quidem libero? Repellendus, odit autem. Sed?\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: \"Green Chai\",\r\n\t\t\t\timg: logo,\r\n\t\t\t\tdesc: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Laboriosam ex minima in illum blanditiis eligendi, recusandae autem delectus quo dolore saepe amet, mollitia dolor quidem libero? Repellendus, odit autem. Sed?\"\r\n\t\t\t},\r\n\t\t\t{\r\n\t\t\t\tname: \"Adraki Chai\",\r\n\t\t\t\timg: logo,\r\n\t\t\t\tdesc: \"Lorem ipsum dolor sit amet consectetur adipisicing elit. Laboriosam ex minima in illum blanditiis eligendi, recusandae autem delectus quo dolore saepe amet, mollitia dolor quidem libero? Repellendus, odit autem. Sed?\"\r\n\t\t\t}\r\n\t\t]\r\n\t};\r\n\r\n\tChaiList = () => {\r\n\t\treturn this.state.chai_types.map(Ctype => {\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"card text-center\">\r\n\t\t\t\t\t<div className=\"card-header\">\r\n\t\t\t\t\t\t<h3>{Ctype.name}</h3>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"card-body\">\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<img src={Ctype.img} alt=\"chai\" />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{Ctype.desc}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t});\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<section aria-label=\"Chai Types\">\r\n\t\t\t\t<h2>Get your favourite Chai in below flavours</h2>\r\n\t\t\t\t<div className=\"flexbox justify-space-around card-container\">{this.ChaiList()}</div>\r\n\t\t\t</section>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ChaiTypes;\r\n","import React from \"react\";\nimport Header from \"./header/header\";\nimport ChaiTypes from \"./chai_types/chai_types\";\n\nfunction App() {\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<Header />\n\t\t\t<div className=\"container\">\n\t\t\t\t<ChaiTypes />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}